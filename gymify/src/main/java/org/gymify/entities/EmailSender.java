package org.gymify.entities;

import jakarta.mail.*;
import jakarta.mail.internet.*;

import java.util.Properties;

public class EmailSender {

    public static void envoyerEmailInscription(String email, String nom, String password, String role) {
        // Param√®tres du serveur SMTP de Gmail
        String host = "smtp.gmail.com";
        String fromEmail = System.getenv("GMAIL_USERNAME");  // R√©cup√©rer depuis l'environnement
        String fromPassword = System.getenv("GMAIL_PASSWORD");  // R√©cup√©rer depuis l'environnement

        // Afficher les valeurs pour v√©rifier si elles sont bien d√©finies
        System.out.println("GMAIL_USERNAME: " + (fromEmail != null ? fromEmail : "Non d√©fini"));
        System.out.println("GMAIL_PASSWORD: " + (fromPassword != null ? "D√©fini" : "Non d√©fini"));

        // V√©rifier que les variables d'environnement sont correctement d√©finies
        if (fromEmail == null || fromEmail.isEmpty() || fromPassword == null || fromPassword.isEmpty()) {
            System.out.println("‚ùå Erreur : Les informations de connexion ne sont pas d√©finies ou sont vides.");
            return;
        }

        // Configuration des propri√©t√©s SMTP
        Properties properties = System.getProperties();
        properties.setProperty("mail.smtp.host", host);
        properties.setProperty("mail.smtp.auth", "true");
        properties.setProperty("mail.smtp.port", "587"); // Port SMTP pour Gmail
        properties.setProperty("mail.smtp.starttls.enable", "true"); // Activer TLS

        // Cr√©er une session avec authentification
        Session session = Session.getInstance(properties, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(fromEmail, fromPassword);
            }
        });

        try {
            // Cr√©er le message
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(fromEmail));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(email));
            message.setSubject("Welcome to Gimify!");
            message.setText("Hello " + nom + ",\n\n" +
                    "Welcome to Gimify! You have been registered as a " + role + ".\n" +
                    "Your credentials are as follows:\n" +
                    "Email: " + email + "\n" +
                    "Password: " + password + "\n\n" +
                    "Best regards,\n" +
                    "Gimify Team");

            // Tester la connexion SMTP avant d'envoyer
            System.out.println("üîÑ Test de connexion SMTP...");
            Transport transport = session.getTransport("smtp");
            transport.connect(host, fromEmail, fromPassword);  // Tester la connexion
            transport.close();
            System.out.println("‚úÖ Connexion SMTP r√©ussie.");

            // Envoyer le message
            Transport.send(message);
            System.out.println("‚úÖ Email envoy√© avec succ√®s.");
        } catch (MessagingException e) {
            // Afficher les erreurs d√©taill√©es
            System.out.println("‚ùå Erreur lors de l'envoi de l'email: " + e.getMessage());
            e.printStackTrace(); // Pour plus de d√©tails sur l'erreur
        }
    }
}
